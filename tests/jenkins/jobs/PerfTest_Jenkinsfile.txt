   PerfTest_Jenkinsfile.run()
      PerfTest_Jenkinsfile.pipeline(groovy.lang.Closure)
         PerfTest_Jenkinsfile.echo(Executing on agent [label:none])
         PerfTest_Jenkinsfile.stage(test-with-security, groovy.lang.Closure)
            PerfTest_Jenkinsfile.script(groovy.lang.Closure)
               PerfTest_Jenkinsfile.downloadBuildManifest({url=test://artifact.url, path=tests/data/opensearch-1.3.0-bundle.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@2.1.1, retriever=null})
                  downloadBuildManifest.sh(curl -sSL test://artifact.url --output tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
               PerfTest_Jenkinsfile.runPerfTestScript({bundleManifest=tests/data/opensearch-1.3.0-bundle.yml, buildId=1236, architecture=x64, insecure=false, workload=nyc_taxis, testIterations=1, warmupIterations=1, stackNameSuffix=307})
                  runPerfTestScript.legacySCM(groovy.lang.Closure)
                  runPerfTestScript.library({identifier=jenkins@2.1.1, retriever=null})
                  runPerfTestScript.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
                  runPerfTestScript.sh(
        pipenv install "dataclasses_json~=0.5" "aws_requests_auth~=0.4" "json2html~=1.3.0"
        pipenv install "aws-cdk.core~=1.143.0" "aws_cdk.aws_ec2~=1.143.0" "aws_cdk.aws_iam~=1.143.0"
        pipenv install "boto3~=1.18" "setuptools~=57.4" "retry~=0.9"
    )
                  runPerfTestScript.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                  runPerfTestScript.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                  runPerfTestScript.withCredentials([AWS_ACCOUNT_PUBLIC, ARTIFACT_BUCKET_NAME], groovy.lang.Closure)
                     runPerfTestScript.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runPerfTestScript.s3Download({file=config.yml, bucket=ARTIFACT_BUCKET_NAME, path=test_config/config.yml, force=true})
                  runPerfTestScript.usernamePassword({credentialsId=bot_token_name, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
                  runPerfTestScript.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                     runPerfTestScript.sh(./test.sh perf-test --stack test-single-security-1236-x64-307 --bundle-manifest tests/data/opensearch-1.3.0-bundle.yml --config config.yml  --workload nyc_taxis --test-iters 1 --warmup-iters 1 )
         PerfTest_Jenkinsfile.stage(test-without-security, groovy.lang.Closure)
            PerfTest_Jenkinsfile.script(groovy.lang.Closure)
               PerfTest_Jenkinsfile.downloadBuildManifest({url=test://artifact.url, path=tests/data/opensearch-1.3.0-bundle.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@2.1.1, retriever=null})
                  downloadBuildManifest.sh(curl -sSL test://artifact.url --output tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
               PerfTest_Jenkinsfile.runPerfTestScript({bundleManifest=tests/data/opensearch-1.3.0-bundle.yml, buildId=1236, architecture=x64, insecure=true, workload=nyc_taxis, testIterations=1, warmupIterations=1, stackNameSuffix=307})
                  runPerfTestScript.legacySCM(groovy.lang.Closure)
                  runPerfTestScript.library({identifier=jenkins@2.1.1, retriever=null})
                  runPerfTestScript.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
                  runPerfTestScript.sh(
        pipenv install "dataclasses_json~=0.5" "aws_requests_auth~=0.4" "json2html~=1.3.0"
        pipenv install "aws-cdk.core~=1.143.0" "aws_cdk.aws_ec2~=1.143.0" "aws_cdk.aws_iam~=1.143.0"
        pipenv install "boto3~=1.18" "setuptools~=57.4" "retry~=0.9"
    )
                  runPerfTestScript.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                  runPerfTestScript.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                  runPerfTestScript.withCredentials([AWS_ACCOUNT_PUBLIC, ARTIFACT_BUCKET_NAME], groovy.lang.Closure)
                     runPerfTestScript.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runPerfTestScript.s3Download({file=config.yml, bucket=ARTIFACT_BUCKET_NAME, path=test_config/config.yml, force=true})
                  runPerfTestScript.usernamePassword({credentialsId=bot_token_name, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
                  runPerfTestScript.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                     runPerfTestScript.sh(./test.sh perf-test --stack test-single-1236-x64-307 --bundle-manifest tests/data/opensearch-1.3.0-bundle.yml --config config.yml --without-security --workload nyc_taxis --test-iters 1 --warmup-iters 1 )
