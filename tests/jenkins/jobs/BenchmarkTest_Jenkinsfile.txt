   BenchmarkTest_Jenkinsfile.run()
      BenchmarkTest_Jenkinsfile.pipeline(groovy.lang.Closure)
         BenchmarkTest_Jenkinsfile.echo(Executing on agent [label:none])
         BenchmarkTest_Jenkinsfile.stage(test-with-security, groovy.lang.Closure)
            BenchmarkTest_Jenkinsfile.script(groovy.lang.Closure)
               BenchmarkTest_Jenkinsfile.downloadBuildManifest({url=test://artifact.url, path=tests/data/opensearch-1.3.0-bundle.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@main, retriever=null})
                  downloadBuildManifest.isUnix()
                  downloadBuildManifest.sh(mkdir -p $(dirname "tests/data/opensearch-1.3.0-bundle.yml"))
                  downloadBuildManifest.sh(touch tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.sh(curl -sSL --retry 5 test://artifact.url --output tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
               BenchmarkTest_Jenkinsfile.runBenchmarkTestScript({command=execute-test, bundleManifest=tests/data/opensearch-1.3.0-bundle.yml, distributionUrl=, distributionVersion=, workload=nyc_taxis, insecure=false, singleNode=true, minDistribution=false, use50PercentHeap=true, enableRemoteStore=false, suffix=307-secure, managerNodeCount=, dataNodeCount=, clientNodeCount=, ingestNodeCount=, mlNodeCount=, dataInstanceType=r5.8xlarge, userTag=security-enabled:true, workloadParams={"key2":"value2"}, testProcedure=, excludeTasks=, includeTasks=, additionalConfig=cluster.indices.replication.strategy:SEGMENT, dataStorageSize=200, enableInstanceStorage=false, mlStorageSize=200, jvmSysProps=, captureNodeStat=false, captureSegmentReplicationStat=true, telemetryParams=})
                  runBenchmarkTestScript.legacySCM(groovy.lang.Closure)
                  runBenchmarkTestScript.library({identifier=jenkins@main, retriever=null})
                  runBenchmarkTestScript.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=ARTIFACT_BUCKET_NAME, secretRef=op://opensearch-infra-secrets/aws-resource-arns/jenkins-artifact-bucket-name}, {envVar=AWS_ACCOUNT_PUBLIC, secretRef=op://opensearch-infra-secrets/aws-accounts/jenkins-aws-account-public}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.withAWS({role=opensearch-test, roleAccount=dummy_account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runBenchmarkTestScript.s3Download({file=config.yml, bucket=test_bucket, path=test_config/config.yml, force=true})
                        runBenchmarkTestScript.s3Download({file=benchmark.ini, bucket=test_bucket, path=test_config/benchmark.ini, force=true})
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=DATASTORE_USER, secretRef=op://opensearch-infra-secrets/benchmark-metrics/benchmark-metrics-datastore-user}, {envVar=DATASTORE_PASSWORD, secretRef=op://opensearch-infra-secrets/benchmark-metrics/benchmark-metrics-datastore-password}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.readFile({file=/tmp/workspace/benchmark.ini})
                     runBenchmarkTestScript.writeFile({file=/tmp/workspace/benchmark.ini, text=})
                  BuildManifest.getArtifactBuildId()
                  BuildManifest.getArtifactArchitecture()
                  BuildManifest.getCommitId(OpenSearch)
                  runBenchmarkTestScript.sh(set +x && ./test.sh benchmark-test execute-test --bundle-manifest tests/data/opensearch-1.3.0-bundle.yml    --config /tmp/workspace/config.yml --workload nyc_taxis --benchmark-config /tmp/workspace/benchmark.ini --user-tag distribution-build-id:1236,arch:x64,os-commit-id:22408088f002a4fc8cdd3b2ed7438866c14c5069,security-enabled:true    --single-node  --use-50-percent-heap    --capture-segment-replication-stat --suffix 307-secure      --data-instance-type r5.8xlarge --workload-params '{"key2":"value2"}'    --additional-config cluster.indices.replication.strategy:SEGMENT --data-node-storage 200 --ml-node-storage 200)
         BenchmarkTest_Jenkinsfile.stage(test-without-security, groovy.lang.Closure)
            BenchmarkTest_Jenkinsfile.script(groovy.lang.Closure)
               BenchmarkTest_Jenkinsfile.downloadBuildManifest({url=test://artifact.url, path=tests/data/opensearch-1.3.0-bundle.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@main, retriever=null})
                  downloadBuildManifest.isUnix()
                  downloadBuildManifest.sh(mkdir -p $(dirname "tests/data/opensearch-1.3.0-bundle.yml"))
                  downloadBuildManifest.sh(touch tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.sh(curl -sSL --retry 5 test://artifact.url --output tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
               BenchmarkTest_Jenkinsfile.runBenchmarkTestScript({command=execute-test, bundleManifest=tests/data/opensearch-1.3.0-bundle.yml, distributionUrl=, distributionVersion=, workload=nyc_taxis, insecure=true, singleNode=true, minDistribution=false, use50PercentHeap=true, enableRemoteStore=false, suffix=307, managerNodeCount=, dataNodeCount=, clientNodeCount=, ingestNodeCount=, mlNodeCount=, dataInstanceType=r5.8xlarge, userTag=security-enabled:false, workloadParams={"key2":"value2"}, testProcedure=, excludeTasks=, includeTasks=, additionalConfig=cluster.indices.replication.strategy:SEGMENT, dataStorageSize=200, mlStorageSize=200, enableInstanceStorage=false, jvmSysProps=, captureNodeStat=false, captureSegmentReplicationStat=true, telemetryParams=})
                  runBenchmarkTestScript.legacySCM(groovy.lang.Closure)
                  runBenchmarkTestScript.library({identifier=jenkins@main, retriever=null})
                  runBenchmarkTestScript.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=ARTIFACT_BUCKET_NAME, secretRef=op://opensearch-infra-secrets/aws-resource-arns/jenkins-artifact-bucket-name}, {envVar=AWS_ACCOUNT_PUBLIC, secretRef=op://opensearch-infra-secrets/aws-accounts/jenkins-aws-account-public}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.withAWS({role=opensearch-test, roleAccount=dummy_account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runBenchmarkTestScript.s3Download({file=config.yml, bucket=test_bucket, path=test_config/config.yml, force=true})
                        runBenchmarkTestScript.s3Download({file=benchmark.ini, bucket=test_bucket, path=test_config/benchmark.ini, force=true})
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=DATASTORE_USER, secretRef=op://opensearch-infra-secrets/benchmark-metrics/benchmark-metrics-datastore-user}, {envVar=DATASTORE_PASSWORD, secretRef=op://opensearch-infra-secrets/benchmark-metrics/benchmark-metrics-datastore-password}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.readFile({file=/tmp/workspace/benchmark.ini})
                     runBenchmarkTestScript.writeFile({file=/tmp/workspace/benchmark.ini, text=})
                  BuildManifest.getArtifactBuildId()
                  BuildManifest.getArtifactArchitecture()
                  BuildManifest.getCommitId(OpenSearch)
                  runBenchmarkTestScript.sh(set +x && ./test.sh benchmark-test execute-test --bundle-manifest tests/data/opensearch-1.3.0-bundle.yml    --config /tmp/workspace/config.yml --workload nyc_taxis --benchmark-config /tmp/workspace/benchmark.ini --user-tag distribution-build-id:1236,arch:x64,os-commit-id:22408088f002a4fc8cdd3b2ed7438866c14c5069,security-enabled:false --without-security   --single-node  --use-50-percent-heap    --capture-segment-replication-stat --suffix 307      --data-instance-type r5.8xlarge --workload-params '{"key2":"value2"}'    --additional-config cluster.indices.replication.strategy:SEGMENT --data-node-storage 200 --ml-node-storage 200)
