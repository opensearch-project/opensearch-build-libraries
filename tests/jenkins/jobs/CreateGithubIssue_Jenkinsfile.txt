   CreateGithubIssue_Jenkinsfile.run()
      CreateGithubIssue_Jenkinsfile.pipeline(groovy.lang.Closure)
         CreateGithubIssue_Jenkinsfile.echo(Executing on agent [label:none])
         CreateGithubIssue_Jenkinsfile.stage(createGithubIssue, groovy.lang.Closure)
            CreateGithubIssue_Jenkinsfile.script(groovy.lang.Closure)
               CreateGithubIssue_Jenkinsfile.createGithubIssue({repoUrl=https://github.com/opensearch-project/opensearch-build, issueTitle=Test GH issue title, issueBody=Test GH issue body, label=label101})
                  createGithubIssue.usernamePassword({credentialsId=jenkins-github-bot-token, passwordVariable=GITHUB_TOKEN, usernameVariable=GITHUB_USER})
                  createGithubIssue.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                     createGithubIssue.sh({script=gh issue list --repo https://github.com/opensearch-project/opensearch-build -S "Test GH issue title in:title" --label label101, returnStdout=true})
                     createGithubIssue.sh({script=gh issue create --title "Test GH issue title" --body "Test GH issue body" --label label101 --label "untriaged" --repo https://github.com/opensearch-project/opensearch-build, returnStdout=true})
