   CreateGithubIssue_Jenkinsfile.run()
      CreateGithubIssue_Jenkinsfile.pipeline(groovy.lang.Closure)
         CreateGithubIssue_Jenkinsfile.echo(Executing on agent [label:none])
         CreateGithubIssue_Jenkinsfile.stage(createGithubIssue, groovy.lang.Closure)
            CreateGithubIssue_Jenkinsfile.script(groovy.lang.Closure)
               CreateGithubIssue_Jenkinsfile.createGithubIssue({repoUrl=https://github.com/opensearch-project/opensearch-build, issueTitle=Test GH issue title, issueBody=Test GH issue body, label=label101, daysToReOpen=5})
                  createGithubIssue.withSecrets({secrets=[{envVar=GITHUB_USER, secretRef=op://opensearch-infra-secrets/github-bot/ci-bot-username}, {envVar=GITHUB_TOKEN, secretRef=op://opensearch-infra-secrets/github-bot/ci-bot-token}]}, groovy.lang.Closure)
                     createGithubIssue.sh({script=gh issue list --repo https://github.com/opensearch-project/opensearch-build -S "Test GH issue title in:title" --json number --jq '.[0].number', returnStdout=true})
                     createGithubIssue.sh({script=date -d "5 days ago" +'%Y-%m-%d', returnStdout=true})
                     createGithubIssue.sh({script=gh issue list --repo https://github.com/opensearch-project/opensearch-build -S "Test GH issue title in:title is:closed closed:>=2023-10-24" --json number --jq '.[0].number', returnStdout=true})
                     createGithubIssue.println(Issue already exists, adding a comment)
                     createGithubIssue.sh({script=gh issue comment bbb
ccc --repo https://github.com/opensearch-project/opensearch-build --body "Test GH issue body", returnStdout=true})
