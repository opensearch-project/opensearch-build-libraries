   PublishToMaven_Jenkinsfile.run()
      PublishToMaven_Jenkinsfile.pipeline(groovy.lang.Closure)
         PublishToMaven_Jenkinsfile.echo(Executing on agent [label:none])
         PublishToMaven_Jenkinsfile.stage(publish, groovy.lang.Closure)
            PublishToMaven_Jenkinsfile.script(groovy.lang.Closure)
               PublishToMaven_Jenkinsfile.publishToMaven({signingArtifactsPath=/path/to/signing, mavenArtifactsPath=/path/to/maven/artifacts, autoPublish=true})
                  publishToMaven.legacySCM(groovy.lang.Closure)
                  publishToMaven.library({identifier=jenkins@1.5.0, retriever=null})
                  publishToMaven.signArtifacts({artifactPath=/path/to/signing, type=maven, platform=linux, sigtype=.asc})
                     signArtifacts.echo(PGP or Windows Signature Signing)
                     signArtifacts.fileExists(workspace/sign.sh)
                     signArtifacts.git({url=https://github.com/opensearch-project/opensearch-build.git, branch=main})
                     signArtifacts.sh(curl -sSL https://artifacts.opensearch.org/publickeys/opensearch.pgp | gpg --import -)
                     signArtifacts.usernamePassword({credentialsId=github_bot_token_name, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
                     signArtifacts.string({credentialsId=jenkins-signer-client-role, variable=SIGNER_CLIENT_ROLE})
                     signArtifacts.string({credentialsId=jenkins-signer-client-external-id, variable=SIGNER_CLIENT_EXTERNAL_ID})
                     signArtifacts.string({credentialsId=jenkins-signer-client-unsigned-bucket, variable=SIGNER_CLIENT_UNSIGNED_BUCKET})
                     signArtifacts.string({credentialsId=jenkins-signer-client-signed-bucket, variable=SIGNER_CLIENT_SIGNED_BUCKET})
                     signArtifacts.withCredentials([[GITHUB_USER, GITHUB_TOKEN], SIGNER_CLIENT_ROLE, SIGNER_CLIENT_EXTERNAL_ID, SIGNER_CLIENT_UNSIGNED_BUCKET, SIGNER_CLIENT_SIGNED_BUCKET], groovy.lang.Closure)
                        signArtifacts.sh(
                   #!/bin/bash
                   set +x
                   export ROLE=SIGNER_CLIENT_ROLE
                   export EXTERNAL_ID=SIGNER_CLIENT_EXTERNAL_ID
                   export UNSIGNED_BUCKET=SIGNER_CLIENT_UNSIGNED_BUCKET
                   export SIGNED_BUCKET=SIGNER_CLIENT_SIGNED_BUCKET

                   workspace/sign.sh /path/to/signing --type=maven --platform=linux --sigtype=.asc
               )
                  publishToMaven.usernamePassword({credentialsId=jenkins-sonatype-creds, usernameVariable=SONATYPE_USERNAME, passwordVariable=SONATYPE_PASSWORD})
                  publishToMaven.withCredentials([[SONATYPE_USERNAME, SONATYPE_PASSWORD]], groovy.lang.Closure)
                     publishToMaven.sh(workspace/publish/stage-maven-release.sh /path/to/maven/artifacts true)
