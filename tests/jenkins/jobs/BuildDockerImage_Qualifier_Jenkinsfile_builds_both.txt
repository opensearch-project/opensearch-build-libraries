   BuildDockerImage_Qualifier_Jenkinsfile.run()
      BuildDockerImage_Qualifier_Jenkinsfile.pipeline(groovy.lang.Closure)
         BuildDockerImage_Qualifier_Jenkinsfile.echo(Executing on agent [label:none])
         BuildDockerImage_Qualifier_Jenkinsfile.stage(build docker image, groovy.lang.Closure)
            BuildDockerImage_Qualifier_Jenkinsfile.script(groovy.lang.Closure)
               BuildDockerImage_Qualifier_Jenkinsfile.buildDockerImage({inputManifest=tests/data/opensearch-2.0.0.yml, artifactUrlX64=opensearch.linux.x64, artifactUrlArm64=opensearch.linux.arm64})
                  buildDockerImage.legacySCM(groovy.lang.Closure)
                  buildDockerImage.library({identifier=jenkins@5.7.1, retriever=null})
                  buildDockerImage.readYaml({file=tests/data/opensearch-2.0.0.yml})
                  InputManifest.asBoolean()
                  buildDockerImage.echo(Triggering docker-build)
                  buildDockerImage.string({name=DOCKER_BUILD_GIT_REPOSITORY, value=https://github.com/opensearch-project/opensearch-build})
                  buildDockerImage.string({name=DOCKER_BUILD_GIT_REPOSITORY_REFERENCE, value=main})
                  buildDockerImage.string({name=DOCKER_BUILD_SCRIPT_WITH_COMMANDS, value=id && pwd && cd docker/release && curl -sSL opensearch.linux.x64 -o opensearch-x64.tgz && curl -sSL opensearch.linux.arm64 -o opensearch-arm64.tgz && bash build-image-multi-arch.sh -v 2.0.0-alpha1 -f ./dockerfiles/opensearch.al2023.dockerfile -p opensearch -a 'x64,arm64' -r opensearchstaging/opensearch -t 'opensearch-x64.tgz,opensearch-arm64.tgz' -n 33})
                  buildDockerImage.build({job=docker-build, propagate=true, wait=true, parameters=[null, null, null]})
                  buildDockerImage.echo(Triggering docker create tag with build number)
                  buildDockerImage.echo(Triggering docker-scan for opensearch version 2.0.0-alpha1)
                  buildDockerImage.string({name=IMAGE_FULL_NAME, value=opensearchstaging/opensearch:2.0.0-alpha1})
                  buildDockerImage.build({job=docker-scan, propagate=true, wait=true, parameters=[null]})
