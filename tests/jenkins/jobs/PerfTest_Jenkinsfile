/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 */

pipeline {
    agent none
    stages {
        stage('perf-test') {
            parallel {
                stage('test-with-security') {
                    steps {
                        script {
                            def bundleManifestObj = downloadBuildManifest(
                                url: BUNDLE_MANIFEST_URL,
                                path: BUNDLE_MANIFEST
                            )
                            runPerfTestScript(bundleManifest: BUNDLE_MANIFEST,
                                buildId: BUILD_ID,
                                architecture: ARCHITECTURE,
                                insecure: false,
                                workload: TEST_WORKLOAD,
                                testIterations: TEST_ITERATIONS,
                                warmupIterations: WARMUP_ITERATIONS,
                                stackNameSuffix: env.BUILD_NUMBER)
                        }
                    }
                }
                stage('test-without-security') {
                    steps {
                        script {
                            def bundleManifestObj = downloadBuildManifest(
                                url: BUNDLE_MANIFEST_URL,
                                path: BUNDLE_MANIFEST
                            )
                            runPerfTestScript(bundleManifest: BUNDLE_MANIFEST,
                                buildId: BUILD_ID,
                                architecture: ARCHITECTURE,
                                insecure: true,
                                workload: TEST_WORKLOAD,
                                testIterations: TEST_ITERATIONS,
                                warmupIterations: WARMUP_ITERATIONS,
                                stackNameSuffix: env.BUILD_NUMBER)
                        }
                    }
                }
            }
        }
    }
}