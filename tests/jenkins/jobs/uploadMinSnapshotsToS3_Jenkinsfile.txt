   uploadMinSnapshotsToS3_Jenkinsfile.run()
      uploadMinSnapshotsToS3_Jenkinsfile.pipeline(groovy.lang.Closure)
         uploadMinSnapshotsToS3_Jenkinsfile.echo(Executing on agent [label:none])
         uploadMinSnapshotsToS3_Jenkinsfile.stage(uploadMinSnapshotsToS3, groovy.lang.Closure)
            uploadMinSnapshotsToS3_Jenkinsfile.script(groovy.lang.Closure)
               uploadMinSnapshotsToS3_Jenkinsfile.createSha512Checksums()
               uploadMinSnapshotsToS3_Jenkinsfile.uploadMinSnapshotsToS3({fileActions=[groovy.lang.Closure], manifest=tests/data/opensearch-1.3.0-build.yml, distribution=tar})
                  uploadMinSnapshotsToS3.legacySCM(groovy.lang.Closure)
                  uploadMinSnapshotsToS3.library({identifier=jenkins@main, retriever=null})
                  uploadMinSnapshotsToS3.readYaml({file=tests/data/opensearch-1.3.0-build.yml})
                  InputManifest.asBoolean()
                  uploadMinSnapshotsToS3.echo(Retreving build manifest from: tests/data/tar/builds/opensearch/manifest.yml)
                  uploadMinSnapshotsToS3.readYaml({file=tests/data/tar/builds/opensearch/manifest.yml})
                  BuildManifest.asBoolean()
                  uploadMinSnapshotsToS3.echo(Create .sha512 for Min Snapshots Artifacts)
                  createSha512Checksums.sh({script=find tests/data/null/builds/opensearch/dist -type f, returnStdout=true})
                  createSha512Checksums.echo(Not generating sha for bbb in tests/data/null/builds/opensearch/dist, doesn't match allowed types [.tar.gz, .zip, .rpm, .deb])
                  createSha512Checksums.echo(Not generating sha for ccc in tests/data/null/builds/opensearch/dist, doesn't match allowed types [.tar.gz, .zip, .rpm, .deb])
                  uploadMinSnapshotsToS3.echo(Start copying files: ver-1.2.2-SNAPSHOT arch-x64 plat-linux build-29 dist-null ext-tar.gz)
                  uploadMinSnapshotsToS3.sh(
        cp -v tests/data/null/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64.tar.gz tests/data/null/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz
        cp -v tests/data/null/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64.tar.gz.sha512 tests/data/null/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.sha512
        cp -v tests/data/null/builds/opensearch/dist/../manifest.yml tests/data/null/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.build-manifest.yml
        sed -i "s/.tar.gz/-latest.tar.gz/g" tests/data/null/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.sha512
    )
                  uploadMinSnapshotsToS3.string({credentialsId=jenkins-artifact-promotion-role, variable=ARTIFACT_PROMOTION_ROLE_NAME})
                  uploadMinSnapshotsToS3.string({credentialsId=jenkins-aws-production-account, variable=AWS_ACCOUNT_ARTIFACT})
                  uploadMinSnapshotsToS3.string({credentialsId=jenkins-artifact-production-bucket-name, variable=ARTIFACT_PRODUCTION_BUCKET_NAME})
                  uploadMinSnapshotsToS3.withCredentials([ARTIFACT_PROMOTION_ROLE_NAME, AWS_ACCOUNT_ARTIFACT, ARTIFACT_PRODUCTION_BUCKET_NAME], groovy.lang.Closure)
                     uploadMinSnapshotsToS3.withAWS({role=ARTIFACT_PROMOTION_ROLE_NAME, roleAccount=AWS_ACCOUNT_ARTIFACT, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        uploadMinSnapshotsToS3.s3Upload({file=tests/data/null/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz, bucket=ARTIFACT_PRODUCTION_BUCKET_NAME, path=snapshots/core/opensearch/1.2.2-SNAPSHOT/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz})
                        uploadMinSnapshotsToS3.s3Upload({file=tests/data/null/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.sha512, bucket=ARTIFACT_PRODUCTION_BUCKET_NAME, path=snapshots/core/opensearch/1.2.2-SNAPSHOT/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.sha512})
                        uploadMinSnapshotsToS3.s3Upload({file=tests/data/null/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.build-manifest.yml, bucket=ARTIFACT_PRODUCTION_BUCKET_NAME, path=snapshots/core/opensearch/1.2.2-SNAPSHOT/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.build-manifest.yml})
