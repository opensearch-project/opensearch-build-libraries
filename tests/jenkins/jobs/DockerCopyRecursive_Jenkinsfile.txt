   DockerCopyRecursive_Jenkinsfile.run()
      DockerCopyRecursive_Jenkinsfile.pipeline(groovy.lang.Closure)
         DockerCopyRecursive_Jenkinsfile.echo(Executing on agent [label:none])
         DockerCopyRecursive_Jenkinsfile.stage(Parameters Check, groovy.lang.Closure)
            DockerCopyRecursive_Jenkinsfile.script(groovy.lang.Closure)
         DockerCopyRecursive_Jenkinsfile.stage(Copy Image to ECR/DockerHub Recursively, groovy.lang.Closure)
            DockerCopyRecursive_Jenkinsfile.script(groovy.lang.Closure)
               DockerCopyRecursive_Jenkinsfile.copyContainer({recursiveCopy=true, sourceImage=alpine:3.15.4, sourceRegistry=opensearchstaging, destinationImage=alpine:3.15.4, destinationRegistry=opensearchproject})
                  copyContainer.usernamePassword({credentialsId=jenkins-production-dockerhub-credential, usernameVariable=DOCKER_USERNAME, passwordVariable=DOCKER_PASSWORD})
                  copyContainer.withCredentials([[DOCKER_USERNAME, DOCKER_PASSWORD]], groovy.lang.Closure)
                     copyContainer.sh({returnStdout=true, script=set +x && echo DOCKER_PASSWORD | docker login --username DOCKER_USERNAME --password-stdin})
                     copyContainer.sh(
        set +x

        if [ true = 'true' ]; then
            echo "Recursive copy from opensearchstaging/alpine to opensearchproject/alpine"
            for source_entry in `gcrane ls opensearchstaging/alpine`; do
                image_tag=`echo $source_entry | cut -d/ -f3 | cut -d: -f2`
                destination_entry="opensearchproject/alpine:$image_tag"
                gcrane cp $source_entry $destination_entry
            done
        else
            echo "Normal copy from opensearchstaging/alpine:3.15.4 to opensearchproject/alpine:3.15.4"
            gcrane cp opensearchstaging/alpine:3.15.4 opensearchproject/alpine:3.15.4
        fi

        docker logout
        docker logout opensearchproject
    )
