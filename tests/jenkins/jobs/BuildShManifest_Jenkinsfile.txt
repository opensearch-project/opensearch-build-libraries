   BuildShManifest_Jenkinsfile.run()
      BuildShManifest_Jenkinsfile.pipeline(groovy.lang.Closure)
         BuildShManifest_Jenkinsfile.echo(Executing on agent [label:none])
         BuildShManifest_Jenkinsfile.stage(Test build manifest jenkins var, groovy.lang.Closure)
            BuildShManifest_Jenkinsfile.script(groovy.lang.Closure)
               BuildShManifest_Jenkinsfile.buildManifest({inputManifest=tests/data/opensearch-2.0.0.yml, distribution=tar, snapshot=true, continueOnError=true})
                  buildManifest.legacySCM(groovy.lang.Closure)
                  buildManifest.library({identifier=jenkins@6.4.4, retriever=null})
                  buildManifest.readYaml({file=tests/data/opensearch-2.0.0.yml})
                  InputManifest.asBoolean()
                  buildManifest.sh(./build.sh tests/data/opensearch-2.0.0.yml -d tar --snapshot --continue-on-error)
               BuildShManifest_Jenkinsfile.buildManifest({componentName=job-scheduler, inputManifest=tests/data/opensearch-2.0.0.yml, distribution=tar, snapshot=true})
                  buildManifest.legacySCM(groovy.lang.Closure)
                  buildManifest.library({identifier=jenkins@6.4.4, retriever=null})
                  buildManifest.readYaml({file=tests/data/opensearch-2.0.0.yml})
                  InputManifest.asBoolean()
                  buildManifest.sh(./build.sh tests/data/opensearch-2.0.0.yml -d tar --component job-scheduler --snapshot)
               BuildShManifest_Jenkinsfile.buildManifest({componentName=common-utils, inputManifest=tests/data/opensearch-2.0.0.yml, distribution=rpm, lock=true, snapshot=true})
                  buildManifest.legacySCM(groovy.lang.Closure)
                  buildManifest.library({identifier=jenkins@6.4.4, retriever=null})
                  buildManifest.readYaml({file=tests/data/opensearch-2.0.0.yml})
                  InputManifest.asBoolean()
                  buildManifest.sh(./build.sh tests/data/opensearch-2.0.0.yml -d rpm --component common-utils --snapshot --lock)
