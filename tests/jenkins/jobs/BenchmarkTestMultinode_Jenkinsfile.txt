   BenchmarkTestMultinode_Jenkinsfile.run()
      BenchmarkTestMultinode_Jenkinsfile.pipeline(groovy.lang.Closure)
         BenchmarkTestMultinode_Jenkinsfile.echo(Executing on agent [label:none])
         BenchmarkTestMultinode_Jenkinsfile.stage(test-with-security, groovy.lang.Closure)
            BenchmarkTestMultinode_Jenkinsfile.script(groovy.lang.Closure)
               BenchmarkTestMultinode_Jenkinsfile.downloadBuildManifest({url=test://artifact.url, path=tests/data/opensearch-1.3.0-bundle.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@11.2.0, retriever=null})
                  downloadBuildManifest.isUnix()
                  downloadBuildManifest.sh(mkdir -p $(dirname "tests/data/opensearch-1.3.0-bundle.yml"))
                  downloadBuildManifest.sh(touch tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.sh(curl -sSL --retry 5 test://artifact.url --output tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
               BenchmarkTestMultinode_Jenkinsfile.runBenchmarkTestScript({command=execute-test, bundleManifest=tests/data/opensearch-1.3.0-bundle.yml, distributionUrl=, distributionVersion=, workload=nyc_taxis, insecure=false, sigv4=true, region=, service=, singleNode=false, minDistribution=false, use50PercentHeap=true, enableRemoteStore=true, suffix=307-secure, managerNodeCount=3, dataNodeCount=3, clientNodeCount=, ingestNodeCount=, mlNodeCount=, dataInstanceType=, userTag=key1:value1,security-enabled:true, workloadParams={"key2":"value2"}, testProcedure=custom-test-procedure, excludeTasks=index-append,default, includeTasks=type:search,index, additionalConfig=cluster.indices.replication.strategy:SEGMENT, dataStorageSize=200, mlStorageSize=200, enableInstanceStorage=false, jvmSysProps=, captureNodeStat=true, captureSegmentReplicationStat=false, telemetryParams={"telemetry_setting":"value"}})
                  runBenchmarkTestScript.legacySCM(groovy.lang.Closure)
                  runBenchmarkTestScript.library({identifier=jenkins@11.2.0, retriever=null})
                  runBenchmarkTestScript.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=ARTIFACT_BUCKET_NAME, secretRef=op://opensearch-infra-secrets/aws-resource-arns/jenkins-artifact-bucket-name}, {envVar=AWS_ACCOUNT_PUBLIC, secretRef=op://opensearch-infra-secrets/aws-accounts/jenkins-aws-account-public}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.withAWS({role=opensearch-test, roleAccount=dummy_account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runBenchmarkTestScript.s3Download({file=config.yml, bucket=test_bucket, path=test_config/config.yml, force=true})
                        runBenchmarkTestScript.s3Download({file=benchmark.ini, bucket=test_bucket, path=test_config/benchmark_sigv4.ini, force=true})
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=DATASTORE_USER, secretRef=op://opensearch-infra-secrets/benchmark-metrics/benchmark-metrics-datastore-user}, {envVar=DATASTORE_PASSWORD, secretRef=op://opensearch-infra-secrets/benchmark-metrics/benchmark-metrics-datastore-password}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.readFile({file=/tmp/workspace/benchmark.ini})
                     runBenchmarkTestScript.writeFile({file=/tmp/workspace/benchmark.ini, text=})
                  BuildManifest.getArtifactBuildId()
                  BuildManifest.getArtifactArchitecture()
                  BuildManifest.getCommitId(OpenSearch)
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=PERF_TEST_ACCOUNT_ID, secretRef=op://opensearch-infra-secrets/aws-accounts/perf-test-account-id}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.withAWS({role=opensearch-full-access-nightlies, roleAccount=PERF_TEST_ACCOUNT_ID, duration=43200, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runBenchmarkTestScript.sh(set +x && ./test.sh benchmark-test execute-test --bundle-manifest tests/data/opensearch-1.3.0-bundle.yml    --config /tmp/workspace/config.yml --workload nyc_taxis --benchmark-config /tmp/workspace/benchmark.ini --user-tag distribution-build-id:1236,arch:x64,os-commit-id:22408088f002a4fc8cdd3b2ed7438866c14c5069,key1:value1,security-enabled:true  --sigv4       --use-50-percent-heap --enable-remote-store --capture-node-stat   --suffix 307-secure --manager-node-count 3 --data-node-count 3     --workload-params '{"key2":"value2"}' --test-procedure custom-test-procedure --exclude-tasks index-append,default --include-tasks type:search,index --additional-config cluster.indices.replication.strategy:SEGMENT --data-node-storage 200 --ml-node-storage 200  --telemetry-params '{"telemetry_setting":"value"}')
         BenchmarkTestMultinode_Jenkinsfile.stage(test-without-security, groovy.lang.Closure)
            BenchmarkTestMultinode_Jenkinsfile.script(groovy.lang.Closure)
               BenchmarkTestMultinode_Jenkinsfile.downloadBuildManifest({url=test://artifact.url, path=tests/data/opensearch-1.3.0-bundle.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@11.2.0, retriever=null})
                  downloadBuildManifest.isUnix()
                  downloadBuildManifest.sh(mkdir -p $(dirname "tests/data/opensearch-1.3.0-bundle.yml"))
                  downloadBuildManifest.sh(touch tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.sh(curl -sSL --retry 5 test://artifact.url --output tests/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
               BenchmarkTestMultinode_Jenkinsfile.runBenchmarkTestScript({command=execute-test, bundleManifest=tests/data/opensearch-1.3.0-bundle.yml, distributionUrl=, distributionVersion=, workload=nyc_taxis, insecure=true, sigv4=false, region=, service=, singleNode=false, minDistribution=false, use50PercentHeap=true, enableRemoteStore=true, suffix=307, managerNodeCount=3, dataNodeCount=3, clientNodeCount=, ingestNodeCount=, mlNodeCount=, dataInstanceType=, userTag=key1:value1,security-enabled:false, workloadParams={"key2":"value2"}, testProcedure=custom-test-procedure, excludeTasks=index-append,default, includeTasks=type:search,index, additionalConfig=cluster.indices.replication.strategy:SEGMENT, dataStorageSize=200, mlStorageSize=200, enableInstanceStorage=false, jvmSysProps=, captureNodeStat=true, captureSegmentReplicationStat=false, telemetryParams={"telemetry_setting":"value"}})
                  runBenchmarkTestScript.legacySCM(groovy.lang.Closure)
                  runBenchmarkTestScript.library({identifier=jenkins@11.2.0, retriever=null})
                  runBenchmarkTestScript.readYaml({file=tests/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=ARTIFACT_BUCKET_NAME, secretRef=op://opensearch-infra-secrets/aws-resource-arns/jenkins-artifact-bucket-name}, {envVar=AWS_ACCOUNT_PUBLIC, secretRef=op://opensearch-infra-secrets/aws-accounts/jenkins-aws-account-public}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.withAWS({role=opensearch-test, roleAccount=dummy_account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runBenchmarkTestScript.s3Download({file=config.yml, bucket=test_bucket, path=test_config/config.yml, force=true})
                        runBenchmarkTestScript.s3Download({file=benchmark.ini, bucket=test_bucket, path=test_config/benchmark.ini, force=true})
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=DATASTORE_USER, secretRef=op://opensearch-infra-secrets/benchmark-metrics/benchmark-metrics-datastore-user}, {envVar=DATASTORE_PASSWORD, secretRef=op://opensearch-infra-secrets/benchmark-metrics/benchmark-metrics-datastore-password}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.readFile({file=/tmp/workspace/benchmark.ini})
                     runBenchmarkTestScript.writeFile({file=/tmp/workspace/benchmark.ini, text=})
                  BuildManifest.getArtifactBuildId()
                  BuildManifest.getArtifactArchitecture()
                  BuildManifest.getCommitId(OpenSearch)
                  runBenchmarkTestScript.withSecrets({secrets=[{envVar=PERF_TEST_ACCOUNT_ID, secretRef=op://opensearch-infra-secrets/aws-accounts/perf-test-account-id}]}, groovy.lang.Closure)
                     runBenchmarkTestScript.withAWS({role=opensearch-full-access-nightlies, roleAccount=PERF_TEST_ACCOUNT_ID, duration=43200, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runBenchmarkTestScript.sh(set +x && ./test.sh benchmark-test execute-test --bundle-manifest tests/data/opensearch-1.3.0-bundle.yml    --config /tmp/workspace/config.yml --workload nyc_taxis --benchmark-config /tmp/workspace/benchmark.ini --user-tag distribution-build-id:1236,arch:x64,os-commit-id:22408088f002a4fc8cdd3b2ed7438866c14c5069,key1:value1,security-enabled:false --without-security        --use-50-percent-heap --enable-remote-store --capture-node-stat   --suffix 307 --manager-node-count 3 --data-node-count 3     --workload-params '{"key2":"value2"}' --test-procedure custom-test-procedure --exclude-tasks index-append,default --include-tasks type:search,index --additional-config cluster.indices.replication.strategy:SEGMENT --data-node-storage 200 --ml-node-storage 200  --telemetry-params '{"telemetry_setting":"value"}')
